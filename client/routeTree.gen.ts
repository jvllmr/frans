/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TicketsIndexRouteImport } from './routes/tickets/index'
import { Route as GrantsIndexRouteImport } from './routes/grants/index'
import { Route as SShareIdRouteImport } from './routes/s/$shareId'
import { Route as GrantsNewRouteImport } from './routes/grants/new'
import { Route as GrantsActiveRouteImport } from './routes/grants/active'
import { Route as ShareTicketTicketIdRouteImport } from './routes/share/ticket/$ticketId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TicketsIndexRoute = TicketsIndexRouteImport.update({
  id: '/tickets/',
  path: '/tickets/',
  getParentRoute: () => rootRouteImport,
} as any)
const GrantsIndexRoute = GrantsIndexRouteImport.update({
  id: '/grants/',
  path: '/grants/',
  getParentRoute: () => rootRouteImport,
} as any)
const SShareIdRoute = SShareIdRouteImport.update({
  id: '/s/$shareId',
  path: '/s/$shareId',
  getParentRoute: () => rootRouteImport,
} as any)
const GrantsNewRoute = GrantsNewRouteImport.update({
  id: '/grants/new',
  path: '/grants/new',
  getParentRoute: () => rootRouteImport,
} as any)
const GrantsActiveRoute = GrantsActiveRouteImport.update({
  id: '/grants/active',
  path: '/grants/active',
  getParentRoute: () => rootRouteImport,
} as any)
const ShareTicketTicketIdRoute = ShareTicketTicketIdRouteImport.update({
  id: '/share/ticket/$ticketId',
  path: '/share/ticket/$ticketId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/grants/active': typeof GrantsActiveRoute
  '/grants/new': typeof GrantsNewRoute
  '/s/$shareId': typeof SShareIdRoute
  '/grants': typeof GrantsIndexRoute
  '/tickets': typeof TicketsIndexRoute
  '/share/ticket/$ticketId': typeof ShareTicketTicketIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/grants/active': typeof GrantsActiveRoute
  '/grants/new': typeof GrantsNewRoute
  '/s/$shareId': typeof SShareIdRoute
  '/grants': typeof GrantsIndexRoute
  '/tickets': typeof TicketsIndexRoute
  '/share/ticket/$ticketId': typeof ShareTicketTicketIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/grants/active': typeof GrantsActiveRoute
  '/grants/new': typeof GrantsNewRoute
  '/s/$shareId': typeof SShareIdRoute
  '/grants/': typeof GrantsIndexRoute
  '/tickets/': typeof TicketsIndexRoute
  '/share/ticket/$ticketId': typeof ShareTicketTicketIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/grants/active'
    | '/grants/new'
    | '/s/$shareId'
    | '/grants'
    | '/tickets'
    | '/share/ticket/$ticketId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/grants/active'
    | '/grants/new'
    | '/s/$shareId'
    | '/grants'
    | '/tickets'
    | '/share/ticket/$ticketId'
  id:
    | '__root__'
    | '/'
    | '/grants/active'
    | '/grants/new'
    | '/s/$shareId'
    | '/grants/'
    | '/tickets/'
    | '/share/ticket/$ticketId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GrantsActiveRoute: typeof GrantsActiveRoute
  GrantsNewRoute: typeof GrantsNewRoute
  SShareIdRoute: typeof SShareIdRoute
  GrantsIndexRoute: typeof GrantsIndexRoute
  TicketsIndexRoute: typeof TicketsIndexRoute
  ShareTicketTicketIdRoute: typeof ShareTicketTicketIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tickets/': {
      id: '/tickets/'
      path: '/tickets'
      fullPath: '/tickets'
      preLoaderRoute: typeof TicketsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/grants/': {
      id: '/grants/'
      path: '/grants'
      fullPath: '/grants'
      preLoaderRoute: typeof GrantsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/s/$shareId': {
      id: '/s/$shareId'
      path: '/s/$shareId'
      fullPath: '/s/$shareId'
      preLoaderRoute: typeof SShareIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/grants/new': {
      id: '/grants/new'
      path: '/grants/new'
      fullPath: '/grants/new'
      preLoaderRoute: typeof GrantsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/grants/active': {
      id: '/grants/active'
      path: '/grants/active'
      fullPath: '/grants/active'
      preLoaderRoute: typeof GrantsActiveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/share/ticket/$ticketId': {
      id: '/share/ticket/$ticketId'
      path: '/share/ticket/$ticketId'
      fullPath: '/share/ticket/$ticketId'
      preLoaderRoute: typeof ShareTicketTicketIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GrantsActiveRoute: GrantsActiveRoute,
  GrantsNewRoute: GrantsNewRoute,
  SShareIdRoute: SShareIdRoute,
  GrantsIndexRoute: GrantsIndexRoute,
  TicketsIndexRoute: TicketsIndexRoute,
  ShareTicketTicketIdRoute: ShareTicketTicketIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
