{
  "id": "d9818c0c-4fc0-4e29-b2b4-60bccaf069e0",
  "realm": "dev",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "7b61bfa6-c996-4064-8b1c-f1181dc60ba7",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "d9818c0c-4fc0-4e29-b2b4-60bccaf069e0",
        "attributes": {}
      },
      {
        "id": "1f57e31f-c897-4588-9694-216e1171db5a",
        "name": "default-roles-dev",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["manage-account", "view-profile"]
          }
        },
        "clientRole": false,
        "containerId": "d9818c0c-4fc0-4e29-b2b4-60bccaf069e0",
        "attributes": {}
      },
      {
        "id": "3390feb7-621a-4e2d-9354-580a2f012f5a",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "d9818c0c-4fc0-4e29-b2b4-60bccaf069e0",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "8bff03ff-ad7f-456d-acf0-563fdec5d2b1",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "03a83e54-7b61-467c-a51d-b3e69a02db5b",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "3b5f65e5-24c1-45c9-a81e-e0d79c36cb13",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "35ec9cb3-a305-49a8-8aaf-330446a30cb7",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "21255889-0210-493c-9c7f-9800a99cf8c6",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "88191c17-1b74-41c2-a20d-3907ca5f697f",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "4b5c924e-f4f9-43d8-8698-bd5235b4466e",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "61cd7dcf-4c6e-42f4-b2bc-7cda99f62dfa",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "8f97ed48-3b6b-4ac9-ad60-53ca5506f735",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "6cc69f2f-ce53-47bb-a7b3-38612e91f3d5",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "7de6b8a7-a5b1-478f-a6cd-218377f51a43",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-authorization",
                "view-realm",
                "create-client",
                "manage-clients",
                "manage-users",
                "manage-identity-providers",
                "query-users",
                "manage-authorization",
                "view-users",
                "manage-realm",
                "manage-events",
                "view-identity-providers",
                "view-events",
                "query-realms",
                "impersonation",
                "query-groups",
                "view-clients",
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "3a9ea97f-5bf4-4f45-807b-915b40b4b0c0",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "6c19cdd7-c3a3-4acb-b246-4264496f9a01",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "1f3d4ba3-d82f-4e3c-a7cb-1c8a1b75fde8",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "87b788b0-379a-404a-9529-6180dfad9855",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "8c3ee4eb-64f6-4e93-aae8-d93991d272be",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "c0127a7c-72aa-475b-af5a-f1bf4a002e01",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "0b17ae1f-aa37-42aa-92e1-6052f81c408c",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        },
        {
          "id": "48e830f4-06b1-4848-9481-1e50eb959a98",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "frans": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "a2488ba6-f994-4694-a3b9-1c750a24726a",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "1084d939-01c7-48cf-8eaa-18ca2b9c01e8",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "3264b157-b99c-4377-a060-51cccb66d5af",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "5834f98e-1354-4905-a3ae-758090d18228",
          "attributes": {}
        },
        {
          "id": "304b920d-9125-40d5-b933-63e7dd9097f3",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "5834f98e-1354-4905-a3ae-758090d18228",
          "attributes": {}
        },
        {
          "id": "15b444d8-c0a3-4dbc-8cb2-84d845933400",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "5834f98e-1354-4905-a3ae-758090d18228",
          "attributes": {}
        },
        {
          "id": "eb7c8c92-c513-44e0-9315-347e2c8d4565",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "5834f98e-1354-4905-a3ae-758090d18228",
          "attributes": {}
        },
        {
          "id": "7f3c36e4-a25d-4ec9-8094-4a133cdcc352",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "5834f98e-1354-4905-a3ae-758090d18228",
          "attributes": {}
        },
        {
          "id": "469055e9-4a44-4966-bae9-a75a48bb5e1e",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "5834f98e-1354-4905-a3ae-758090d18228",
          "attributes": {}
        },
        {
          "id": "be54904b-b15e-49fe-a7be-49de0120d915",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "5834f98e-1354-4905-a3ae-758090d18228",
          "attributes": {}
        },
        {
          "id": "59754988-e17d-4b30-bb48-155f13ac5631",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "5834f98e-1354-4905-a3ae-758090d18228",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "69bbd969-27a8-4322-96d7-496ff8055351",
      "name": "admin",
      "path": "/admin",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {}
    }
  ],
  "defaultRole": {
    "id": "1f57e31f-c897-4588-9694-216e1171db5a",
    "name": "default-roles-dev",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "d9818c0c-4fc0-4e29-b2b4-60bccaf069e0"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "1709f7c3-b985-44a4-96e7-7dfe01a8eeb0",
      "username": "frans_admin",
      "firstName": "Frans",
      "lastName": "Admin",
      "email": "frans_admin@vllmr.dev",
      "emailVerified": true,
      "enabled": true,
      "createdTimestamp": 1749895576997,
      "totp": false,
      "credentials": [
        {
          "id": "6ab40762-382e-4072-a719-f4569ee1e779",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1749895595384,
          "secretData": "{\"value\":\"FPqCZML92VfBOySbZC0/Rc8bdywRAI3ivbkB1zr/PxI=\",\"salt\":\"mZOkLiRsjV2PLZUmsub0lQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-dev"],
      "notBefore": 0,
      "groups": ["/admin"]
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "5834f98e-1354-4905-a3ae-758090d18228",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/dev/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/dev/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7fb05e9f-0630-4789-b8c0-ce42eb955fa7",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/dev/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/dev/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "75610fa1-95ac-4889-8d4b-e99bd25683a4",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ab13b2ef-3c19-4e17-875f-9c7643e38cc4",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1084d939-01c7-48cf-8eaa-18ca2b9c01e8",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "729ace76-59d2-4de7-b8fa-e4c425ca860c",
      "clientId": "frans",
      "name": "Frans",
      "description": "Simple file-transfer service",
      "rootUrl": "http://localhost:8081/files",
      "adminUrl": "http://localhost:8081/files",
      "baseUrl": "http://localhost:8081/files",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:8081/files/api/auth/callback"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1749895972",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "false",
        "frontchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "http://localhost:8081/files*",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "pkce.code.challenge.method": "S256",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "groups",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fcaa2cb4-ca11-48c2-a6f7-42844ee27578",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "71ba76f5-6a5a-46aa-85c4-7eb14196e623",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/dev/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/dev/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "46db5a1e-ccd9-4999-a5d2-fb38eefbc644",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "d70cbeba-2a8b-4ee4-9bdf-dcfae2d35869",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "9f7ba40f-c046-4e82-965d-13f6bf5e3bf1",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "188f8896-0b11-45b7-9268-7679fa21a8e6",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b11f8e65-6d4f-4b27-9440-0d7548edd0db",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "308e19ed-2b85-4732-a98a-e87a55b20495",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "d7e582ea-1d68-466a-8614-d8079daaf3aa",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "29652891-0f36-4aff-8428-7e03a96516dd",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "50b43644-92ee-4319-81f3-11545eb092ca",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "0c02d222-2996-4682-aa17-b1313694947d",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "fd050fad-9d17-4620-87d7-be2a709ba461",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "1e176a5f-1a9e-43a0-860e-5ddc425f4c7a",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "4f7a7bb6-e367-4673-a168-724be5bcc24b",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "97df5fe7-5547-45a7-9db2-59dbfa103d33",
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "b57fcfab-d122-44ec-9405-0f29e5746608",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4a1b39c9-6514-43a5-aa33-7037ef37e6af",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a622384c-538e-4618-8ae7-4be377ccfbe1",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "f32d0877-f8e5-4a45-ad67-9be6fad453f3",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "4ce89c5b-6e90-422a-8035-ade952530e7d",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "569dd872-ae61-4e92-9314-4ad31676ffea",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "9caaf421-1fc5-4fa9-b095-924d130982f3",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "bc886a43-da04-4daa-91b1-321642e3ecec",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "52d74075-96f0-4776-a5dc-246bbc1a9c5e",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "c56742be-ce0a-48a0-b4c7-b29ba423525d",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "471658f7-95a4-4910-a377-477708d093f4",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "cbf91fa1-c215-4f4e-b691-741585c39978",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "138f99e4-82c6-41c5-9298-b560b358b5eb",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "47b36bac-bd0e-4936-94f9-3b49871c3fce",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "7f19944b-5b0e-4a5b-9c35-2fc01e58918e",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "249088ee-8320-4328-af4c-00e30a89c2ea",
      "name": "groups",
      "description": "User groups",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": "User groups"
      },
      "protocolMappers": [
        {
          "id": "32bf03ce-985d-4999-8387-e53e90f59278",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "false",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "multivalued": "true",
            "id.token.claim": "false",
            "lightweight.claim": "false",
            "access.token.claim": "false",
            "claim.name": "groups"
          }
        }
      ]
    },
    {
      "id": "37a1622f-8277-4e28-9213-460d1521d808",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "ad6e6fb3-6f66-45a8-8e38-ddacf0845b26",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c6935be1-37c7-4ba0-bd1a-09f9d21b00e2",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0056a98f-78bb-429e-b475-64eea7723a63",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "463e201d-c21b-47ab-9d01-d0baea140d49",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1b191f16-73cb-4da3-9950-d3861810afe1",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "087c2b47-d862-477d-adba-1b4415e1b4d2",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "57fba827-e432-435d-8568-cbfc30a79e8b",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3e3d2225-3e31-49ca-9981-f968503fd5f8",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "de7cc1e4-cbbe-4ba5-8cdc-c5357d8000d4",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "9d380eb1-50bb-42d3-ab2a-fafb1ebd0e7f",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5407a20c-17c0-43e1-94e5-841b8b674c65",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "796aa477-9be3-4807-92f0-2914ed55e3b6",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a3cc9e50-d645-4be5-9f6d-e016c532e6a9",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "43b9bf9b-0260-4bc5-956c-3ded11de7e70",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "42b87921-10d6-47ea-b019-d67b17bb5745",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "8d9f334b-61dd-4602-8172-2cda9dbca696",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "1a404682-1e41-4372-8890-40961dc351b4",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "cd5c5b57-6bd0-4591-913c-defca55210b8",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f5cea72a-6595-4cb7-9a4d-09845d88d1ea",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic",
    "groups"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "d73ddd8b-ee2e-4eb9-a5d9-493ea10edab2",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "7bb5a872-a82a-4a44-ae4d-c3b075c5d4b1",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "4c55e0b7-0a6e-43ed-a33a-9140df89047b",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "bdcde035-42c6-49ab-be42-32bb1e7c94be",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "c844704e-cf8a-4ebc-8e57-948e0cd5551c",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "2609de8a-83b0-4b09-9187-6f1431a06fe4",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "e375118c-ebba-467d-b74f-75a00cd95b96",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "2c1ba7e8-1a0b-48f1-9632-f19ee1de6f62",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "8a1083fb-28e9-4882-b3e6-e3e7dcda5664",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAqCzSxgjjFypzEcy3pDbzTyxW5+xkocL/kkM6PjggYXbeZWe+pk6xHM8mkPH9qlHoLO9wEHQo4J0P7TzZpe18PEiFOR3OfydFcv2xhV++c2R0Vk9I3YuE3BMbvuSsjuiyy//GCIJhcfIHwGcROMHqO6BzUSgE8fKL2nKNpC1pBzEJpCozBnQn/TplhkCsopCGxkkaZ+thTJ2CYNV84/PkJNDrhfATVA9GNDJXk4DAZ7REwjN5NRkTmcEgP5vu1PS9yWCw2ULVzvIKhutJjrknAhu9W11t8UydadGWr7rgkue3k+KeEFkOHNuIdnmCTXesfVnXUtsByCidVN3DXJaqvwIDAQABAoIBACD6IR6KEZWyUjwUS5Jc4BsPU79IoHcD2L+ihSI8OUVDXNq/nCfaWGqQyDw154rlYsSk8vGXBYj942ievQMHbYwYoF8R1DMkzT5+NrgzjRHtic5+34fp2tSYvqEREDE5ug28iuWSQ29niVOWIk9h3v9wOAya71VOPVRJkDK4YNby2kP66+ypALACXZ5Ea825LzIMeAo+ifMcm9S1N4nM8+R/E0gqPQbFLkHAE430CPK4gaUiicSJEMvadofsBanwdFspiJUP1w6fY1t1fsZCCHtNbeW1+3IQXqFnR9rw48HSDjFbcaqNU8dpujgO0iiFYAp/8qi8ouoSU4txLW+3MHkCgYEA1911bQ/rXumM39tMCSxzcGlihfUL/vNX+RI+sbN4/f0yaXlP1uH4V59QzhAu9tmGFX3lV5LYhmMVIrEh4aEAcWRPKbPFzRFPKROIw1GTwm3SUQrWKRvCoT2krblZ8EmyE2jROqwjeqOYSzGDQO+V8usmUCUy3t5FwHfZp2Wy/VUCgYEAx3F2SMASoRiOrClpNm7Sql5Xd+Nkh6COcm6KcCG/ux4EoCUEsSkTi39rez/L9mbO5aCdHl2HgJXjJJz85gUUJUc/3k6n6789ryyR6TCFLSxc13wY4rRGdc/8CiA3kcnNCazwD4F5CmeuvQZPjiJO9Vr7RN5tMryFqWm4kpgI58MCgYAFB5Tv2JocWQa+RIbOA+ogqWPxSRdhdlwLYqBxVYQxLtAY4wm4MQWvTPf+BSSC/eiA4bERTEudPfvFFil671xqR/MMPrMSJyAYDet22ZS+x/5Jgx4gURRE24HVxmbREXaDu0J8wnwFJICs59duEOcGhPIclfFMfhNT+7bnjpgQDQKBgC3zExhhwCkDWmOJyuayk7CSub4yUof40rjEhPqem+jFWrV2seULHKin+6BSq3AicYpv/aLwU3apkcJutMld5C1OhAV4w7FJxzFjqF48QoKM1PsEaUtZ013zRBMlJwhcoPOYt1orLzLZfmWoXY3Wk7BtfLR6NlhZHMZSSCbmBi83AoGAFe0jyWfdVKCNRDr3vVTtC0YdkQmmDiYj6fsYCZuUGFcz//UGZYcj9DYJFVRyt042Izesueerk7f6ZFGi3D3IOF23vyLD3kT6Zvsco8cSXdKXM33QXeqb11MgXiNNQ5/Eu9hFVMWTYgVS+9lvycz3a6uqPM2PgZwqPhZ03NKLOUI="
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIIClTCCAX0CBgGXbeYVPjANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANkZXYwHhcNMjUwNjE0MTAwMzA0WhcNMzUwNjE0MTAwNDQ0WjAOMQwwCgYDVQQDDANkZXYwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCoLNLGCOMXKnMRzLekNvNPLFbn7GShwv+SQzo+OCBhdt5lZ76mTrEczyaQ8f2qUegs73AQdCjgnQ/tPNml7Xw8SIU5Hc5/J0Vy/bGFX75zZHRWT0jdi4TcExu+5KyO6LLL/8YIgmFx8gfAZxE4weo7oHNRKATx8ovaco2kLWkHMQmkKjMGdCf9OmWGQKyikIbGSRpn62FMnYJg1Xzj8+Qk0OuF8BNUD0Y0MleTgMBntETCM3k1GROZwSA/m+7U9L3JYLDZQtXO8gqG60mOuScCG71bXW3xTJ1p0ZavuuCS57eT4p4QWQ4c24h2eYJNd6x9WddS2wHIKJ1U3cNclqq/AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIpTphcIRZSA+36DXPr/40z9bMO70deuYo0CfO/kiIUN5ZoEkU1TWS5Oj7ULNkebBqxK0+26ufDzdFgbWKdrbL1T7qXzuJg2lMpWNEUCHfCs5v5aWh6ITSUnbIHcZI/XWxtAHA4fPve7IXCCFkE5W5jr+Qu0iuhdhw3l4wGI3B4d9fBSf//XpGTaQm+5u4XtDEJBtPX7/3HboC+LtrNScdnA2MU9PZfgRs3oLy88ryrnXmR8IMrp+NP+iNWHiBdgCXmXeTMWNx52CbJkGg9i0hQV5TedVZK2Yg4H/WqKqnW5KPa5sBRUsuHQJO8nE+rWZlimK+b7OMK4S3PR4p3VGJs="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "8bc2f79b-3cb3-4b04-83f4-37d1f0aa5172",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAkyq0nY52jajTJp4xbhDXboGNCCn7WZRxEP4VjpkF3NDip1MU25OpMt6W3gV8O13ORHi+Zb73RI2qa1nLSo0QM8QyBUq51+DnEf2SoYdEUQEoj7Vr3vhHu73+XCLQu5IkZElHwxN3pOFS645Ylr7VTiEDmU+dt2DRCb+c1M32GSqr1EEOr7bk6Cj0ClXAmkY4SCsDa6RQeLF8tud2wkNn7gQKt2qWi+CSSEJEdmf+x71ClcZSWc0n/NGGAaOkNZKEDcqMOR6uCiMy4lar+7K5olv5vJOAiM/cskBmmAU3dFls+IWv8ssFoTGWbR8XguwGc0LmfWsBSNkgxCDPAjJn8wIDAQABAoIBABR2I5akcCdSCcmcxRKglNNwf8Na0u+pi+7o5OZmsEH7aQgKrSO6bBP+jstfx94ZNMygXRiYbJjDeaZjXbiH1HDeHnZN5Xj2dCo0L2b1/7Gjj5griUv/CTo5OFxnGs55i0XGSov88O2jxnup1vdeoRmzzWRLhYoxk97fHVcZK9ZjunGIktDuVHkZ90CWaL0MLzW1ZpKVPGu7udIuNGlVA4KirXWAaeCxvbTjp3w7RHD3vMdORMCfLJ6G0Tm81NpM+KcEeLjOnc1SHOfsk+f4YkMyLIp+5Dhr+B7arkxRN9xO7dKBK2pcWuZnJQjF/FjS1o6sQT7BStB4O79L7pkKJgECgYEAx43UhWmAs9ifAdFBd5BFxcpaE3orOPW5WjvYJaA66JQZJrkPPJ31CYdTB2kGv+1KMr8kCOF00CBlsP0UVWtnmdrKvW58cbh/HiEV5RV22jT9yepIeUqxo9LP3qI8tFtWx0GONTmlo70ktqfbVzfpKeDQZj7uaxdiK/HIcKyR5JMCgYEAvMtlck5+3JFEtep6vOrYxSZBa8kiXO9MfOR4iyI3yRT3sv2+CajRSElTIhWeXGcH6lSjS/k/BeOEVnaRJTvYHufJMuKzlMNfBIPaLe+Nn0U8evwAccwo/s5HevPGJarpo6bP+vYP4ez7siWZ6iGtsgzcltwyJcOyZhz5WtLL6yECgYBMksQGHaHhYTJCxEVW1+muKCPAbZTAWqoxUd1zMrToIkw0a7bJD+PDMEZQBaEtbKSYLHhrX/gvFP9wluyCiqBKjYZWglsGWEGPEisQqNfei48HN/tvb5YSwwY47BBXNOVruGAVVHWXCzFXVbn5Ed9KzpWpZmSee26UZkb/1Xh2OQKBgFIRtOrItpsZRx4xbON8z3h8VcoOKDLwD3bnNoN8/3UY+UhEx3yZd0iOH2ZcsXeHjkhOPKJFGiFsMtYHOrdN2Xgt2CeXpusPNtnWm1yGmzDWPyFTNLpDPrrtXuNS3xr2vhPW6ug0WNkkVJGviMXfmAsjTi0CUYZbGM0M4VSa9+whAoGBAIa9/v4FkPuAOp+g1C/RqE78Ez3/MGbQczNGiK2G5Gyd0vPHko9ptlFiHH9gDs8MP3g4KSTnE7ZUJhtMR3h73x3nd8R1GTkrweCXWPNMhSOdMW+O89TFOcYt69idBFNjxKT3tiuS6FaVAW9FM/QLpMUqP9YgAh5p+/ey9QvWcxpq"
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIIClTCCAX0CBgGXbeYVwjANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANkZXYwHhcNMjUwNjE0MTAwMzA0WhcNMzUwNjE0MTAwNDQ0WjAOMQwwCgYDVQQDDANkZXYwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCTKrSdjnaNqNMmnjFuENdugY0IKftZlHEQ/hWOmQXc0OKnUxTbk6ky3pbeBXw7Xc5EeL5lvvdEjaprWctKjRAzxDIFSrnX4OcR/ZKhh0RRASiPtWve+Ee7vf5cItC7kiRkSUfDE3ek4VLrjliWvtVOIQOZT523YNEJv5zUzfYZKqvUQQ6vtuToKPQKVcCaRjhIKwNrpFB4sXy253bCQ2fuBAq3apaL4JJIQkR2Z/7HvUKVxlJZzSf80YYBo6Q1koQNyow5Hq4KIzLiVqv7srmiW/m8k4CIz9yyQGaYBTd0WWz4ha/yywWhMZZtHxeC7AZzQuZ9awFI2SDEIM8CMmfzAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAFYoLjSj38dtuga3E6R6rjZdQt3rHMZBvBnNkXdIDEscfEebmNcVCwyG/Afd3Uz5WoXzQPiHcRQaaLj7opkvfy3xqO3Thj9Hcbn795IuXmIQuzjMc+zXV9CwknPHuHHlqP7Mfr6ulHjPIwPj/zXsKGwXMYAQyL1a5CACWktw1jKCcckOQcw879hV2unXLWjlECze/i6tBIz/GgNPnER63KvJVJd5/+Kazki5PRx2d1TPHEl+Z3NE+XmnySfeTnvePV0UrUqG5biCc37dkX/Rd46Cpl1E9CcxLoM01W8T496QILQeKoQdPLxF/CYN75uda9qXc0jR1sN5KA7mniuYX4A="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "bca35b9d-b21e-4b9d-89e0-d7f94efcf4cb",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["8705010e-157f-405a-9110-37a3e14263fa"],
          "secret": ["ckEE0lgx7hFJSOO-aO0NLg"],
          "priority": ["100"]
        }
      },
      {
        "id": "94cfee5c-8a62-4a6e-afd5-c67603b4d50f",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["3193a26e-2d0b-4c11-aa53-439ef4172c45"],
          "secret": [
            "Qpqma8XQXbcddn0T58DT0VKOIWNLpsmOxbs2pVlGUKUm660ZJCERDDDMJ343CJLc19h4eGFUcXItsGLikcFEkpTpvp5y11c0HTheN2tqaWD3Q5P7y-YbJuHh4YtuU2O1VMhTttRPpR09s7aO3IpC3U4OgROHvxOOuU_lv3YrJB0"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "authenticationFlows": [
    {
      "id": "de36e41c-675d-4241-b522-8c2b4ad72a9d",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bf36427e-d8d0-401d-8e33-ac9f826a01a1",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2e84f1c9-3018-4134-91d0-1f873477f3d4",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "32b6414d-a68d-47b6-b0ef-3d762c73d065",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "680b75aa-0c83-4b04-90e1-51ec64db5e94",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a32b8949-5d8a-4ddf-b1b3-deb27e8a82bf",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "47613c79-62b9-41e6-8712-9e075554e433",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a77cc5bf-ad69-4f3a-a6eb-7b7d79cc4f50",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4a2f6f88-eec5-4617-b693-cd82711ea4a5",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3ef9e21f-979e-4641-89a2-c186b51f4ca9",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "52f9df29-3cfe-4c2d-a657-9e9a947aa16f",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1c494b3d-2c32-4e98-9a39-b991d4401c13",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4cb6441b-8feb-447d-8a2d-6b9fc3adf9d7",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cc272a12-6971-404d-b1dc-620227a1ad36",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "66e14db5-14ee-4975-8907-27b4505a4e6d",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a942e9b8-4fbf-419c-addf-c22b6bda239b",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fc41d267-4110-472d-a06d-db8a780fdaa1",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c43e201d-8f62-420a-89b5-02e1110b4406",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "57acc8b4-893d-40c2-ae41-d001ec60eb90",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1cdfe3b5-6edc-4945-be0a-aa47c5e37c87",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5b4fc0d3-300c-4dba-b598-d25ae728339b",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "302a202f-a33e-46c4-a7f9-2e654ce77682",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "7e7cf065-d250-4ee7-bbb4-40c111a5204f",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "idp_link",
      "name": "Linking Identity Provider",
      "providerId": "idp_link",
      "enabled": true,
      "defaultAction": false,
      "priority": 110,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.3.3",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
