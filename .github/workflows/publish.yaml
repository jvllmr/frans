name: Publish

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "*.*.*"

jobs:
  container-publish:
    name: Container
    permissions:
      contents: read
      packages: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false
          tags: true
          fetch-depth: 0
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Get docker tags
        id: metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: |
            ghcr.io/jvllmr/frans
          tags: |
            type=ref,event=pr
            type=ref,event=branch,enable={{is_default_branch}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate version
        run: ./scripts/gen_version.sh
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          annotations: ${{ steps.metadata.outputs.annotations }}
          # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#registry-cache
          cache-from: type=registry,ref=ghcr.io/jvllmr/frans:buildcache
          cache-to: type=registry,ref=ghcr.io/jvllmr/frans:buildcache,mode=max
      - name: Comment PR
        if: github.repository == 'jvllmr/frans' && github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          message: |
            🔄 Building container image `ghcr.io/jvllmr/frans:pr-${{ github.event.pull_request.number }}` on commit `${{ github.event.pull_request.head.sha }}`
          message-success: |
            ✅ Successfully built and pushed container image `ghcr.io/jvllmr/frans:pr-${{ github.event.pull_request.number }}` on commit `${{ github.event.pull_request.head.sha }}`.
               You can try it out now
          message-failure: |
            ❌ Failed to build container image `ghcr.io/jvllmr/frans:pr-${{ github.event.pull_request.number }}` on commit `${{ github.event.pull_request.head.sha }}`
  helm-lint-test:
    needs:
      - container-publish
    name: Test Helm
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set version
        run: sed -i "s/%VERSION%/0.1.0/g" charts/frans/Chart.yaml

      - name: Set app version
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            APPVERSION="pr-${GITHUB_PR_NUMBER}"
          else
            APPVERSION="main"
          fi
          echo "Set app version to $APPVERSION"
          sed -i "s/%APPVERSION%/$APPVERSION/g" charts/frans/Chart.yaml
      - name: Set up Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.x"
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${GITHUB_EVENT_REPOSITORY_DEFAULT_BRANCH})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_EVENT_REPOSITORY_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${GITHUB_EVENT_REPOSITORY_DEFAULT_BRANCH}
        env:
          GITHUB_EVENT_REPOSITORY_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      - name: Setup postgres
        if: steps.list-changed.outputs.changed == 'true'
        run: kubectl apply -f .github/workflows/manifests/postgres.yaml
      - name: Setup pocket-id
        if: steps.list-changed.outputs.changed == 'true'
        run: kubectl apply -f .github/workflows/manifests/pocketid.yaml
      - name: Change database address
        if: steps.list-changed.outputs.changed == 'true'
        run: "sed -i 's/host: localhost/host: postgres/' charts/frans/values.yaml"
      - name: Change oidc issuer
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          sed -i 's|issuer: ""|issuer: "http://pocket-id:1411"|' charts/frans/values.yaml
      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --chart-dirs charts --target-branch ${GITHUB_EVENT_REPOSITORY_DEFAULT_BRANCH}
        env:
          GITHUB_EVENT_REPOSITORY_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

  helm-publish:
    needs:
      - container-publish
      - helm-lint-test
    name: Helm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set version
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          SHA=$(git rev-parse --short HEAD)
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            # Use tag, strip leading 'v'
            VERSION="${GITHUB_REF_NAME#v}"
            APPVERSION="${GITHUB_REF_NAME#v}"
          else
            # Get previous tag (most recent tag reachable from current commit)
            PREV_TAG=$(git describe --tags --abbrev=0 || echo "0.0.0")
            PREV_TAG="${PREV_TAG#v}"
            
            if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
              APPVERSION="pr-${GITHUB_PR_NUMBER}"
              VERSION="${PREV_TAG}+pr-${GITHUB_PR_NUMBER}-${SHA}"
            else
              APPVERSION="main"
              VERSION="${PREV_TAG}+main-${SHA}"
            fi
          fi
          echo "Set chart version to $VERSION"
          echo "Set app version to $APPVERSION"
          sed -i "s/%VERSION%/$VERSION/g" charts/frans/Chart.yaml
          sed -i "s/%APPVERSION%/$APPVERSION/g" charts/frans/Chart.yaml
      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io \
            --username ${GITHUB_ACTOR} \
            --password-stdin
      - name: Package and Push Helm Chart
        run: |
          CHART_NAME=frans
          CHART_PATH=charts/${CHART_NAME}
          VERSION=$(grep '^version:' ${CHART_PATH}/Chart.yaml | awk '{print $2}')

          echo "Packaging ${CHART_NAME} version ${VERSION}"
          helm package ${CHART_PATH} --destination packaged

          echo "Pushing to ghcr.io/${{ github.repository_owner }}/${CHART_NAME}:${VERSION}"
          helm push packaged/${CHART_NAME}-${VERSION}.tgz \
            oci://ghcr.io/${{ github.repository_owner }}
