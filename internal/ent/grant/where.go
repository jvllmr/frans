// Code generated by ent, DO NOT EDIT.

package grant

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
	"github.com/jvllmr/frans/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldID, id))
}

// Comment applies equality check predicate on the "comment" field. It's identical to CommentEQ.
func Comment(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldComment, v))
}

// ExpiryType applies equality check predicate on the "expiry_type" field. It's identical to ExpiryTypeEQ.
func ExpiryType(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldExpiryType, v))
}

// HashedPassword applies equality check predicate on the "hashed_password" field. It's identical to HashedPasswordEQ.
func HashedPassword(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldHashedPassword, v))
}

// Salt applies equality check predicate on the "salt" field. It's identical to SaltEQ.
func Salt(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldSalt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldCreatedAt, v))
}

// ExpiryTotalDays applies equality check predicate on the "expiry_total_days" field. It's identical to ExpiryTotalDaysEQ.
func ExpiryTotalDays(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldExpiryTotalDays, v))
}

// ExpiryDaysSinceLastUpload applies equality check predicate on the "expiry_days_since_last_upload" field. It's identical to ExpiryDaysSinceLastUploadEQ.
func ExpiryDaysSinceLastUpload(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldExpiryDaysSinceLastUpload, v))
}

// ExpiryTotalUploads applies equality check predicate on the "expiry_total_uploads" field. It's identical to ExpiryTotalUploadsEQ.
func ExpiryTotalUploads(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldExpiryTotalUploads, v))
}

// FileExpiryType applies equality check predicate on the "file_expiry_type" field. It's identical to FileExpiryTypeEQ.
func FileExpiryType(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldFileExpiryType, v))
}

// FileExpiryTotalDays applies equality check predicate on the "file_expiry_total_days" field. It's identical to FileExpiryTotalDaysEQ.
func FileExpiryTotalDays(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldFileExpiryTotalDays, v))
}

// FileExpiryDaysSinceLastDownload applies equality check predicate on the "file_expiry_days_since_last_download" field. It's identical to FileExpiryDaysSinceLastDownloadEQ.
func FileExpiryDaysSinceLastDownload(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldFileExpiryDaysSinceLastDownload, v))
}

// FileExpiryTotalDownloads applies equality check predicate on the "file_expiry_total_downloads" field. It's identical to FileExpiryTotalDownloadsEQ.
func FileExpiryTotalDownloads(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldFileExpiryTotalDownloads, v))
}

// LastUpload applies equality check predicate on the "last_upload" field. It's identical to LastUploadEQ.
func LastUpload(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldLastUpload, v))
}

// TimesUploaded applies equality check predicate on the "times_uploaded" field. It's identical to TimesUploadedEQ.
func TimesUploaded(v uint64) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldTimesUploaded, v))
}

// EmailOnUpload applies equality check predicate on the "email_on_upload" field. It's identical to EmailOnUploadEQ.
func EmailOnUpload(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldEmailOnUpload, v))
}

// CreatorLang applies equality check predicate on the "creator_lang" field. It's identical to CreatorLangEQ.
func CreatorLang(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldCreatorLang, v))
}

// CommentEQ applies the EQ predicate on the "comment" field.
func CommentEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldComment, v))
}

// CommentNEQ applies the NEQ predicate on the "comment" field.
func CommentNEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldComment, v))
}

// CommentIn applies the In predicate on the "comment" field.
func CommentIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldComment, vs...))
}

// CommentNotIn applies the NotIn predicate on the "comment" field.
func CommentNotIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldComment, vs...))
}

// CommentGT applies the GT predicate on the "comment" field.
func CommentGT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldComment, v))
}

// CommentGTE applies the GTE predicate on the "comment" field.
func CommentGTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldComment, v))
}

// CommentLT applies the LT predicate on the "comment" field.
func CommentLT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldComment, v))
}

// CommentLTE applies the LTE predicate on the "comment" field.
func CommentLTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldComment, v))
}

// CommentContains applies the Contains predicate on the "comment" field.
func CommentContains(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContains(FieldComment, v))
}

// CommentHasPrefix applies the HasPrefix predicate on the "comment" field.
func CommentHasPrefix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasPrefix(FieldComment, v))
}

// CommentHasSuffix applies the HasSuffix predicate on the "comment" field.
func CommentHasSuffix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasSuffix(FieldComment, v))
}

// CommentIsNil applies the IsNil predicate on the "comment" field.
func CommentIsNil() predicate.Grant {
	return predicate.Grant(sql.FieldIsNull(FieldComment))
}

// CommentNotNil applies the NotNil predicate on the "comment" field.
func CommentNotNil() predicate.Grant {
	return predicate.Grant(sql.FieldNotNull(FieldComment))
}

// CommentEqualFold applies the EqualFold predicate on the "comment" field.
func CommentEqualFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEqualFold(FieldComment, v))
}

// CommentContainsFold applies the ContainsFold predicate on the "comment" field.
func CommentContainsFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContainsFold(FieldComment, v))
}

// ExpiryTypeEQ applies the EQ predicate on the "expiry_type" field.
func ExpiryTypeEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldExpiryType, v))
}

// ExpiryTypeNEQ applies the NEQ predicate on the "expiry_type" field.
func ExpiryTypeNEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldExpiryType, v))
}

// ExpiryTypeIn applies the In predicate on the "expiry_type" field.
func ExpiryTypeIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldExpiryType, vs...))
}

// ExpiryTypeNotIn applies the NotIn predicate on the "expiry_type" field.
func ExpiryTypeNotIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldExpiryType, vs...))
}

// ExpiryTypeGT applies the GT predicate on the "expiry_type" field.
func ExpiryTypeGT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldExpiryType, v))
}

// ExpiryTypeGTE applies the GTE predicate on the "expiry_type" field.
func ExpiryTypeGTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldExpiryType, v))
}

// ExpiryTypeLT applies the LT predicate on the "expiry_type" field.
func ExpiryTypeLT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldExpiryType, v))
}

// ExpiryTypeLTE applies the LTE predicate on the "expiry_type" field.
func ExpiryTypeLTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldExpiryType, v))
}

// ExpiryTypeContains applies the Contains predicate on the "expiry_type" field.
func ExpiryTypeContains(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContains(FieldExpiryType, v))
}

// ExpiryTypeHasPrefix applies the HasPrefix predicate on the "expiry_type" field.
func ExpiryTypeHasPrefix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasPrefix(FieldExpiryType, v))
}

// ExpiryTypeHasSuffix applies the HasSuffix predicate on the "expiry_type" field.
func ExpiryTypeHasSuffix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasSuffix(FieldExpiryType, v))
}

// ExpiryTypeEqualFold applies the EqualFold predicate on the "expiry_type" field.
func ExpiryTypeEqualFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEqualFold(FieldExpiryType, v))
}

// ExpiryTypeContainsFold applies the ContainsFold predicate on the "expiry_type" field.
func ExpiryTypeContainsFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContainsFold(FieldExpiryType, v))
}

// HashedPasswordEQ applies the EQ predicate on the "hashed_password" field.
func HashedPasswordEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldHashedPassword, v))
}

// HashedPasswordNEQ applies the NEQ predicate on the "hashed_password" field.
func HashedPasswordNEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldHashedPassword, v))
}

// HashedPasswordIn applies the In predicate on the "hashed_password" field.
func HashedPasswordIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldHashedPassword, vs...))
}

// HashedPasswordNotIn applies the NotIn predicate on the "hashed_password" field.
func HashedPasswordNotIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldHashedPassword, vs...))
}

// HashedPasswordGT applies the GT predicate on the "hashed_password" field.
func HashedPasswordGT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldHashedPassword, v))
}

// HashedPasswordGTE applies the GTE predicate on the "hashed_password" field.
func HashedPasswordGTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldHashedPassword, v))
}

// HashedPasswordLT applies the LT predicate on the "hashed_password" field.
func HashedPasswordLT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldHashedPassword, v))
}

// HashedPasswordLTE applies the LTE predicate on the "hashed_password" field.
func HashedPasswordLTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldHashedPassword, v))
}

// HashedPasswordContains applies the Contains predicate on the "hashed_password" field.
func HashedPasswordContains(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContains(FieldHashedPassword, v))
}

// HashedPasswordHasPrefix applies the HasPrefix predicate on the "hashed_password" field.
func HashedPasswordHasPrefix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasPrefix(FieldHashedPassword, v))
}

// HashedPasswordHasSuffix applies the HasSuffix predicate on the "hashed_password" field.
func HashedPasswordHasSuffix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasSuffix(FieldHashedPassword, v))
}

// HashedPasswordEqualFold applies the EqualFold predicate on the "hashed_password" field.
func HashedPasswordEqualFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEqualFold(FieldHashedPassword, v))
}

// HashedPasswordContainsFold applies the ContainsFold predicate on the "hashed_password" field.
func HashedPasswordContainsFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContainsFold(FieldHashedPassword, v))
}

// SaltEQ applies the EQ predicate on the "salt" field.
func SaltEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldSalt, v))
}

// SaltNEQ applies the NEQ predicate on the "salt" field.
func SaltNEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldSalt, v))
}

// SaltIn applies the In predicate on the "salt" field.
func SaltIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldSalt, vs...))
}

// SaltNotIn applies the NotIn predicate on the "salt" field.
func SaltNotIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldSalt, vs...))
}

// SaltGT applies the GT predicate on the "salt" field.
func SaltGT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldSalt, v))
}

// SaltGTE applies the GTE predicate on the "salt" field.
func SaltGTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldSalt, v))
}

// SaltLT applies the LT predicate on the "salt" field.
func SaltLT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldSalt, v))
}

// SaltLTE applies the LTE predicate on the "salt" field.
func SaltLTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldSalt, v))
}

// SaltContains applies the Contains predicate on the "salt" field.
func SaltContains(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContains(FieldSalt, v))
}

// SaltHasPrefix applies the HasPrefix predicate on the "salt" field.
func SaltHasPrefix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasPrefix(FieldSalt, v))
}

// SaltHasSuffix applies the HasSuffix predicate on the "salt" field.
func SaltHasSuffix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasSuffix(FieldSalt, v))
}

// SaltEqualFold applies the EqualFold predicate on the "salt" field.
func SaltEqualFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEqualFold(FieldSalt, v))
}

// SaltContainsFold applies the ContainsFold predicate on the "salt" field.
func SaltContainsFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContainsFold(FieldSalt, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldCreatedAt, v))
}

// ExpiryTotalDaysEQ applies the EQ predicate on the "expiry_total_days" field.
func ExpiryTotalDaysEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldExpiryTotalDays, v))
}

// ExpiryTotalDaysNEQ applies the NEQ predicate on the "expiry_total_days" field.
func ExpiryTotalDaysNEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldExpiryTotalDays, v))
}

// ExpiryTotalDaysIn applies the In predicate on the "expiry_total_days" field.
func ExpiryTotalDaysIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldExpiryTotalDays, vs...))
}

// ExpiryTotalDaysNotIn applies the NotIn predicate on the "expiry_total_days" field.
func ExpiryTotalDaysNotIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldExpiryTotalDays, vs...))
}

// ExpiryTotalDaysGT applies the GT predicate on the "expiry_total_days" field.
func ExpiryTotalDaysGT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldExpiryTotalDays, v))
}

// ExpiryTotalDaysGTE applies the GTE predicate on the "expiry_total_days" field.
func ExpiryTotalDaysGTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldExpiryTotalDays, v))
}

// ExpiryTotalDaysLT applies the LT predicate on the "expiry_total_days" field.
func ExpiryTotalDaysLT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldExpiryTotalDays, v))
}

// ExpiryTotalDaysLTE applies the LTE predicate on the "expiry_total_days" field.
func ExpiryTotalDaysLTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldExpiryTotalDays, v))
}

// ExpiryDaysSinceLastUploadEQ applies the EQ predicate on the "expiry_days_since_last_upload" field.
func ExpiryDaysSinceLastUploadEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldExpiryDaysSinceLastUpload, v))
}

// ExpiryDaysSinceLastUploadNEQ applies the NEQ predicate on the "expiry_days_since_last_upload" field.
func ExpiryDaysSinceLastUploadNEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldExpiryDaysSinceLastUpload, v))
}

// ExpiryDaysSinceLastUploadIn applies the In predicate on the "expiry_days_since_last_upload" field.
func ExpiryDaysSinceLastUploadIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldExpiryDaysSinceLastUpload, vs...))
}

// ExpiryDaysSinceLastUploadNotIn applies the NotIn predicate on the "expiry_days_since_last_upload" field.
func ExpiryDaysSinceLastUploadNotIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldExpiryDaysSinceLastUpload, vs...))
}

// ExpiryDaysSinceLastUploadGT applies the GT predicate on the "expiry_days_since_last_upload" field.
func ExpiryDaysSinceLastUploadGT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldExpiryDaysSinceLastUpload, v))
}

// ExpiryDaysSinceLastUploadGTE applies the GTE predicate on the "expiry_days_since_last_upload" field.
func ExpiryDaysSinceLastUploadGTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldExpiryDaysSinceLastUpload, v))
}

// ExpiryDaysSinceLastUploadLT applies the LT predicate on the "expiry_days_since_last_upload" field.
func ExpiryDaysSinceLastUploadLT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldExpiryDaysSinceLastUpload, v))
}

// ExpiryDaysSinceLastUploadLTE applies the LTE predicate on the "expiry_days_since_last_upload" field.
func ExpiryDaysSinceLastUploadLTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldExpiryDaysSinceLastUpload, v))
}

// ExpiryTotalUploadsEQ applies the EQ predicate on the "expiry_total_uploads" field.
func ExpiryTotalUploadsEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldExpiryTotalUploads, v))
}

// ExpiryTotalUploadsNEQ applies the NEQ predicate on the "expiry_total_uploads" field.
func ExpiryTotalUploadsNEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldExpiryTotalUploads, v))
}

// ExpiryTotalUploadsIn applies the In predicate on the "expiry_total_uploads" field.
func ExpiryTotalUploadsIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldExpiryTotalUploads, vs...))
}

// ExpiryTotalUploadsNotIn applies the NotIn predicate on the "expiry_total_uploads" field.
func ExpiryTotalUploadsNotIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldExpiryTotalUploads, vs...))
}

// ExpiryTotalUploadsGT applies the GT predicate on the "expiry_total_uploads" field.
func ExpiryTotalUploadsGT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldExpiryTotalUploads, v))
}

// ExpiryTotalUploadsGTE applies the GTE predicate on the "expiry_total_uploads" field.
func ExpiryTotalUploadsGTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldExpiryTotalUploads, v))
}

// ExpiryTotalUploadsLT applies the LT predicate on the "expiry_total_uploads" field.
func ExpiryTotalUploadsLT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldExpiryTotalUploads, v))
}

// ExpiryTotalUploadsLTE applies the LTE predicate on the "expiry_total_uploads" field.
func ExpiryTotalUploadsLTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldExpiryTotalUploads, v))
}

// FileExpiryTypeEQ applies the EQ predicate on the "file_expiry_type" field.
func FileExpiryTypeEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldFileExpiryType, v))
}

// FileExpiryTypeNEQ applies the NEQ predicate on the "file_expiry_type" field.
func FileExpiryTypeNEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldFileExpiryType, v))
}

// FileExpiryTypeIn applies the In predicate on the "file_expiry_type" field.
func FileExpiryTypeIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldFileExpiryType, vs...))
}

// FileExpiryTypeNotIn applies the NotIn predicate on the "file_expiry_type" field.
func FileExpiryTypeNotIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldFileExpiryType, vs...))
}

// FileExpiryTypeGT applies the GT predicate on the "file_expiry_type" field.
func FileExpiryTypeGT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldFileExpiryType, v))
}

// FileExpiryTypeGTE applies the GTE predicate on the "file_expiry_type" field.
func FileExpiryTypeGTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldFileExpiryType, v))
}

// FileExpiryTypeLT applies the LT predicate on the "file_expiry_type" field.
func FileExpiryTypeLT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldFileExpiryType, v))
}

// FileExpiryTypeLTE applies the LTE predicate on the "file_expiry_type" field.
func FileExpiryTypeLTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldFileExpiryType, v))
}

// FileExpiryTypeContains applies the Contains predicate on the "file_expiry_type" field.
func FileExpiryTypeContains(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContains(FieldFileExpiryType, v))
}

// FileExpiryTypeHasPrefix applies the HasPrefix predicate on the "file_expiry_type" field.
func FileExpiryTypeHasPrefix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasPrefix(FieldFileExpiryType, v))
}

// FileExpiryTypeHasSuffix applies the HasSuffix predicate on the "file_expiry_type" field.
func FileExpiryTypeHasSuffix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasSuffix(FieldFileExpiryType, v))
}

// FileExpiryTypeEqualFold applies the EqualFold predicate on the "file_expiry_type" field.
func FileExpiryTypeEqualFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEqualFold(FieldFileExpiryType, v))
}

// FileExpiryTypeContainsFold applies the ContainsFold predicate on the "file_expiry_type" field.
func FileExpiryTypeContainsFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContainsFold(FieldFileExpiryType, v))
}

// FileExpiryTotalDaysEQ applies the EQ predicate on the "file_expiry_total_days" field.
func FileExpiryTotalDaysEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldFileExpiryTotalDays, v))
}

// FileExpiryTotalDaysNEQ applies the NEQ predicate on the "file_expiry_total_days" field.
func FileExpiryTotalDaysNEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldFileExpiryTotalDays, v))
}

// FileExpiryTotalDaysIn applies the In predicate on the "file_expiry_total_days" field.
func FileExpiryTotalDaysIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldFileExpiryTotalDays, vs...))
}

// FileExpiryTotalDaysNotIn applies the NotIn predicate on the "file_expiry_total_days" field.
func FileExpiryTotalDaysNotIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldFileExpiryTotalDays, vs...))
}

// FileExpiryTotalDaysGT applies the GT predicate on the "file_expiry_total_days" field.
func FileExpiryTotalDaysGT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldFileExpiryTotalDays, v))
}

// FileExpiryTotalDaysGTE applies the GTE predicate on the "file_expiry_total_days" field.
func FileExpiryTotalDaysGTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldFileExpiryTotalDays, v))
}

// FileExpiryTotalDaysLT applies the LT predicate on the "file_expiry_total_days" field.
func FileExpiryTotalDaysLT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldFileExpiryTotalDays, v))
}

// FileExpiryTotalDaysLTE applies the LTE predicate on the "file_expiry_total_days" field.
func FileExpiryTotalDaysLTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldFileExpiryTotalDays, v))
}

// FileExpiryDaysSinceLastDownloadEQ applies the EQ predicate on the "file_expiry_days_since_last_download" field.
func FileExpiryDaysSinceLastDownloadEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldFileExpiryDaysSinceLastDownload, v))
}

// FileExpiryDaysSinceLastDownloadNEQ applies the NEQ predicate on the "file_expiry_days_since_last_download" field.
func FileExpiryDaysSinceLastDownloadNEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldFileExpiryDaysSinceLastDownload, v))
}

// FileExpiryDaysSinceLastDownloadIn applies the In predicate on the "file_expiry_days_since_last_download" field.
func FileExpiryDaysSinceLastDownloadIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldFileExpiryDaysSinceLastDownload, vs...))
}

// FileExpiryDaysSinceLastDownloadNotIn applies the NotIn predicate on the "file_expiry_days_since_last_download" field.
func FileExpiryDaysSinceLastDownloadNotIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldFileExpiryDaysSinceLastDownload, vs...))
}

// FileExpiryDaysSinceLastDownloadGT applies the GT predicate on the "file_expiry_days_since_last_download" field.
func FileExpiryDaysSinceLastDownloadGT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldFileExpiryDaysSinceLastDownload, v))
}

// FileExpiryDaysSinceLastDownloadGTE applies the GTE predicate on the "file_expiry_days_since_last_download" field.
func FileExpiryDaysSinceLastDownloadGTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldFileExpiryDaysSinceLastDownload, v))
}

// FileExpiryDaysSinceLastDownloadLT applies the LT predicate on the "file_expiry_days_since_last_download" field.
func FileExpiryDaysSinceLastDownloadLT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldFileExpiryDaysSinceLastDownload, v))
}

// FileExpiryDaysSinceLastDownloadLTE applies the LTE predicate on the "file_expiry_days_since_last_download" field.
func FileExpiryDaysSinceLastDownloadLTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldFileExpiryDaysSinceLastDownload, v))
}

// FileExpiryTotalDownloadsEQ applies the EQ predicate on the "file_expiry_total_downloads" field.
func FileExpiryTotalDownloadsEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldFileExpiryTotalDownloads, v))
}

// FileExpiryTotalDownloadsNEQ applies the NEQ predicate on the "file_expiry_total_downloads" field.
func FileExpiryTotalDownloadsNEQ(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldFileExpiryTotalDownloads, v))
}

// FileExpiryTotalDownloadsIn applies the In predicate on the "file_expiry_total_downloads" field.
func FileExpiryTotalDownloadsIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldFileExpiryTotalDownloads, vs...))
}

// FileExpiryTotalDownloadsNotIn applies the NotIn predicate on the "file_expiry_total_downloads" field.
func FileExpiryTotalDownloadsNotIn(vs ...uint8) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldFileExpiryTotalDownloads, vs...))
}

// FileExpiryTotalDownloadsGT applies the GT predicate on the "file_expiry_total_downloads" field.
func FileExpiryTotalDownloadsGT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldFileExpiryTotalDownloads, v))
}

// FileExpiryTotalDownloadsGTE applies the GTE predicate on the "file_expiry_total_downloads" field.
func FileExpiryTotalDownloadsGTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldFileExpiryTotalDownloads, v))
}

// FileExpiryTotalDownloadsLT applies the LT predicate on the "file_expiry_total_downloads" field.
func FileExpiryTotalDownloadsLT(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldFileExpiryTotalDownloads, v))
}

// FileExpiryTotalDownloadsLTE applies the LTE predicate on the "file_expiry_total_downloads" field.
func FileExpiryTotalDownloadsLTE(v uint8) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldFileExpiryTotalDownloads, v))
}

// LastUploadEQ applies the EQ predicate on the "last_upload" field.
func LastUploadEQ(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldLastUpload, v))
}

// LastUploadNEQ applies the NEQ predicate on the "last_upload" field.
func LastUploadNEQ(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldLastUpload, v))
}

// LastUploadIn applies the In predicate on the "last_upload" field.
func LastUploadIn(vs ...time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldLastUpload, vs...))
}

// LastUploadNotIn applies the NotIn predicate on the "last_upload" field.
func LastUploadNotIn(vs ...time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldLastUpload, vs...))
}

// LastUploadGT applies the GT predicate on the "last_upload" field.
func LastUploadGT(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldLastUpload, v))
}

// LastUploadGTE applies the GTE predicate on the "last_upload" field.
func LastUploadGTE(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldLastUpload, v))
}

// LastUploadLT applies the LT predicate on the "last_upload" field.
func LastUploadLT(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldLastUpload, v))
}

// LastUploadLTE applies the LTE predicate on the "last_upload" field.
func LastUploadLTE(v time.Time) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldLastUpload, v))
}

// LastUploadIsNil applies the IsNil predicate on the "last_upload" field.
func LastUploadIsNil() predicate.Grant {
	return predicate.Grant(sql.FieldIsNull(FieldLastUpload))
}

// LastUploadNotNil applies the NotNil predicate on the "last_upload" field.
func LastUploadNotNil() predicate.Grant {
	return predicate.Grant(sql.FieldNotNull(FieldLastUpload))
}

// TimesUploadedEQ applies the EQ predicate on the "times_uploaded" field.
func TimesUploadedEQ(v uint64) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldTimesUploaded, v))
}

// TimesUploadedNEQ applies the NEQ predicate on the "times_uploaded" field.
func TimesUploadedNEQ(v uint64) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldTimesUploaded, v))
}

// TimesUploadedIn applies the In predicate on the "times_uploaded" field.
func TimesUploadedIn(vs ...uint64) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldTimesUploaded, vs...))
}

// TimesUploadedNotIn applies the NotIn predicate on the "times_uploaded" field.
func TimesUploadedNotIn(vs ...uint64) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldTimesUploaded, vs...))
}

// TimesUploadedGT applies the GT predicate on the "times_uploaded" field.
func TimesUploadedGT(v uint64) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldTimesUploaded, v))
}

// TimesUploadedGTE applies the GTE predicate on the "times_uploaded" field.
func TimesUploadedGTE(v uint64) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldTimesUploaded, v))
}

// TimesUploadedLT applies the LT predicate on the "times_uploaded" field.
func TimesUploadedLT(v uint64) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldTimesUploaded, v))
}

// TimesUploadedLTE applies the LTE predicate on the "times_uploaded" field.
func TimesUploadedLTE(v uint64) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldTimesUploaded, v))
}

// EmailOnUploadEQ applies the EQ predicate on the "email_on_upload" field.
func EmailOnUploadEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldEmailOnUpload, v))
}

// EmailOnUploadNEQ applies the NEQ predicate on the "email_on_upload" field.
func EmailOnUploadNEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldEmailOnUpload, v))
}

// EmailOnUploadIn applies the In predicate on the "email_on_upload" field.
func EmailOnUploadIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldEmailOnUpload, vs...))
}

// EmailOnUploadNotIn applies the NotIn predicate on the "email_on_upload" field.
func EmailOnUploadNotIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldEmailOnUpload, vs...))
}

// EmailOnUploadGT applies the GT predicate on the "email_on_upload" field.
func EmailOnUploadGT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldEmailOnUpload, v))
}

// EmailOnUploadGTE applies the GTE predicate on the "email_on_upload" field.
func EmailOnUploadGTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldEmailOnUpload, v))
}

// EmailOnUploadLT applies the LT predicate on the "email_on_upload" field.
func EmailOnUploadLT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldEmailOnUpload, v))
}

// EmailOnUploadLTE applies the LTE predicate on the "email_on_upload" field.
func EmailOnUploadLTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldEmailOnUpload, v))
}

// EmailOnUploadContains applies the Contains predicate on the "email_on_upload" field.
func EmailOnUploadContains(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContains(FieldEmailOnUpload, v))
}

// EmailOnUploadHasPrefix applies the HasPrefix predicate on the "email_on_upload" field.
func EmailOnUploadHasPrefix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasPrefix(FieldEmailOnUpload, v))
}

// EmailOnUploadHasSuffix applies the HasSuffix predicate on the "email_on_upload" field.
func EmailOnUploadHasSuffix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasSuffix(FieldEmailOnUpload, v))
}

// EmailOnUploadIsNil applies the IsNil predicate on the "email_on_upload" field.
func EmailOnUploadIsNil() predicate.Grant {
	return predicate.Grant(sql.FieldIsNull(FieldEmailOnUpload))
}

// EmailOnUploadNotNil applies the NotNil predicate on the "email_on_upload" field.
func EmailOnUploadNotNil() predicate.Grant {
	return predicate.Grant(sql.FieldNotNull(FieldEmailOnUpload))
}

// EmailOnUploadEqualFold applies the EqualFold predicate on the "email_on_upload" field.
func EmailOnUploadEqualFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEqualFold(FieldEmailOnUpload, v))
}

// EmailOnUploadContainsFold applies the ContainsFold predicate on the "email_on_upload" field.
func EmailOnUploadContainsFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContainsFold(FieldEmailOnUpload, v))
}

// CreatorLangEQ applies the EQ predicate on the "creator_lang" field.
func CreatorLangEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEQ(FieldCreatorLang, v))
}

// CreatorLangNEQ applies the NEQ predicate on the "creator_lang" field.
func CreatorLangNEQ(v string) predicate.Grant {
	return predicate.Grant(sql.FieldNEQ(FieldCreatorLang, v))
}

// CreatorLangIn applies the In predicate on the "creator_lang" field.
func CreatorLangIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldIn(FieldCreatorLang, vs...))
}

// CreatorLangNotIn applies the NotIn predicate on the "creator_lang" field.
func CreatorLangNotIn(vs ...string) predicate.Grant {
	return predicate.Grant(sql.FieldNotIn(FieldCreatorLang, vs...))
}

// CreatorLangGT applies the GT predicate on the "creator_lang" field.
func CreatorLangGT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGT(FieldCreatorLang, v))
}

// CreatorLangGTE applies the GTE predicate on the "creator_lang" field.
func CreatorLangGTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldGTE(FieldCreatorLang, v))
}

// CreatorLangLT applies the LT predicate on the "creator_lang" field.
func CreatorLangLT(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLT(FieldCreatorLang, v))
}

// CreatorLangLTE applies the LTE predicate on the "creator_lang" field.
func CreatorLangLTE(v string) predicate.Grant {
	return predicate.Grant(sql.FieldLTE(FieldCreatorLang, v))
}

// CreatorLangContains applies the Contains predicate on the "creator_lang" field.
func CreatorLangContains(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContains(FieldCreatorLang, v))
}

// CreatorLangHasPrefix applies the HasPrefix predicate on the "creator_lang" field.
func CreatorLangHasPrefix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasPrefix(FieldCreatorLang, v))
}

// CreatorLangHasSuffix applies the HasSuffix predicate on the "creator_lang" field.
func CreatorLangHasSuffix(v string) predicate.Grant {
	return predicate.Grant(sql.FieldHasSuffix(FieldCreatorLang, v))
}

// CreatorLangEqualFold applies the EqualFold predicate on the "creator_lang" field.
func CreatorLangEqualFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldEqualFold(FieldCreatorLang, v))
}

// CreatorLangContainsFold applies the ContainsFold predicate on the "creator_lang" field.
func CreatorLangContainsFold(v string) predicate.Grant {
	return predicate.Grant(sql.FieldContainsFold(FieldCreatorLang, v))
}

// HasFiles applies the HasEdge predicate on the "files" edge.
func HasFiles() predicate.Grant {
	return predicate.Grant(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, FilesTable, FilesPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasFilesWith applies the HasEdge predicate on the "files" edge with a given conditions (other predicates).
func HasFilesWith(preds ...predicate.File) predicate.Grant {
	return predicate.Grant(func(s *sql.Selector) {
		step := newFilesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasOwner applies the HasEdge predicate on the "owner" edge.
func HasOwner() predicate.Grant {
	return predicate.Grant(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, OwnerTable, OwnerColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOwnerWith applies the HasEdge predicate on the "owner" edge with a given conditions (other predicates).
func HasOwnerWith(preds ...predicate.User) predicate.Grant {
	return predicate.Grant(func(s *sql.Selector) {
		step := newOwnerStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasShareaccesstokens applies the HasEdge predicate on the "shareaccesstokens" edge.
func HasShareaccesstokens() predicate.Grant {
	return predicate.Grant(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, ShareaccesstokensTable, ShareaccesstokensColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasShareaccesstokensWith applies the HasEdge predicate on the "shareaccesstokens" edge with a given conditions (other predicates).
func HasShareaccesstokensWith(preds ...predicate.ShareAccessToken) predicate.Grant {
	return predicate.Grant(func(s *sql.Selector) {
		step := newShareaccesstokensStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Grant) predicate.Grant {
	return predicate.Grant(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Grant) predicate.Grant {
	return predicate.Grant(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Grant) predicate.Grant {
	return predicate.Grant(sql.NotPredicates(p))
}
