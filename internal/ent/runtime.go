// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/jvllmr/frans/internal/ent/file"
	"github.com/jvllmr/frans/internal/ent/grant"
	"github.com/jvllmr/frans/internal/ent/schema"
	"github.com/jvllmr/frans/internal/ent/ticket"
	"github.com/jvllmr/frans/internal/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	fileFields := schema.File{}.Fields()
	_ = fileFields
	// fileDescCreatedAt is the schema descriptor for created_at field.
	fileDescCreatedAt := fileFields[4].Descriptor()
	// file.DefaultCreatedAt holds the default value on creation for the created_at field.
	file.DefaultCreatedAt = fileDescCreatedAt.Default.(func() time.Time)
	// fileDescTimesDownloaded is the schema descriptor for times_downloaded field.
	fileDescTimesDownloaded := fileFields[6].Descriptor()
	// file.DefaultTimesDownloaded holds the default value on creation for the times_downloaded field.
	file.DefaultTimesDownloaded = fileDescTimesDownloaded.Default.(uint64)
	grantFields := schema.Grant{}.Fields()
	_ = grantFields
	// grantDescCreatedAt is the schema descriptor for created_at field.
	grantDescCreatedAt := grantFields[5].Descriptor()
	// grant.DefaultCreatedAt holds the default value on creation for the created_at field.
	grant.DefaultCreatedAt = grantDescCreatedAt.Default.(func() time.Time)
	// grantDescTimesUploaded is the schema descriptor for times_uploaded field.
	grantDescTimesUploaded := grantFields[14].Descriptor()
	// grant.DefaultTimesUploaded holds the default value on creation for the times_uploaded field.
	grant.DefaultTimesUploaded = grantDescTimesUploaded.Default.(uint64)
	// grantDescCreatorLang is the schema descriptor for creator_lang field.
	grantDescCreatorLang := grantFields[16].Descriptor()
	// grant.DefaultCreatorLang holds the default value on creation for the creator_lang field.
	grant.DefaultCreatorLang = grantDescCreatorLang.Default.(string)
	ticketFields := schema.Ticket{}.Fields()
	_ = ticketFields
	// ticketDescCreatedAt is the schema descriptor for created_at field.
	ticketDescCreatedAt := ticketFields[5].Descriptor()
	// ticket.DefaultCreatedAt holds the default value on creation for the created_at field.
	ticket.DefaultCreatedAt = ticketDescCreatedAt.Default.(func() time.Time)
	// ticketDescCreatorLang is the schema descriptor for creator_lang field.
	ticketDescCreatorLang := ticketFields[10].Descriptor()
	// ticket.DefaultCreatorLang holds the default value on creation for the creator_lang field.
	ticket.DefaultCreatorLang = ticketDescCreatorLang.Default.(string)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[6].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescSubmittedTickets is the schema descriptor for submitted_tickets field.
	userDescSubmittedTickets := userFields[7].Descriptor()
	// user.DefaultSubmittedTickets holds the default value on creation for the submitted_tickets field.
	user.DefaultSubmittedTickets = userDescSubmittedTickets.Default.(int)
	// userDescSubmittedGrants is the schema descriptor for submitted_grants field.
	userDescSubmittedGrants := userFields[8].Descriptor()
	// user.DefaultSubmittedGrants holds the default value on creation for the submitted_grants field.
	user.DefaultSubmittedGrants = userDescSubmittedGrants.Default.(int)
	// userDescTotalDataSize is the schema descriptor for totalDataSize field.
	userDescTotalDataSize := userFields[9].Descriptor()
	// user.DefaultTotalDataSize holds the default value on creation for the totalDataSize field.
	user.DefaultTotalDataSize = userDescTotalDataSize.Default.(int64)
}
